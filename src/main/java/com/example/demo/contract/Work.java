package com.example.demo.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>
 * Auto generated code.
 * <p>
 * <strong>Do not modify!</strong>
 * <p>
 * Please use the <a href="https://docs.web3j.io/command_line.html">web3j
 * command line tools</a>, or the
 * org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen
 * module</a> to update.
 *
 * <p>
 * Generated with web3j version 4.5.16.
 */
@SuppressWarnings("rawtypes")
public class Work extends Contract {

	public static final String BINARY = "608060405234801561001057600080fd5b50614201806100206000396000f3fe60806040526004361061034f5760003560e01c80636c9c2faf116101c6578063b7245a05116100f7578063cf5ee2c111610095578063e75722301161006f578063e7572230146118c2578063f7d9757714611911578063f8548e3614611956578063f99fcc5e146119bb5761034f565b8063cf5ee2c1146116e6578063d70506d6146117f8578063de690b0a1461183d5761034f565b8063c3e99c13116100d1578063c3e99c1314611566578063c579eda6146115eb578063c641c7cb14611626578063ce48fa46146116a15761034f565b8063b7245a051461145f578063b8aeb425146114a6578063ba8b5e60146114e15761034f565b806394caf01411610164578063a77010611161013e578063a77010611461124b578063ae77c237146112d0578063aec23f501461131e578063af559686146113f05761034f565b806394caf014146111545780639b85729c14611199578063a61490aa146111f25761034f565b80637494ad81116101a05780637494ad8114610fe857806380db10f51461105b57806384e44b16146110b45780638686e2a91461110f5761034f565b80636c9c2faf14610e485780636f158eaa14610e7357806370f78e7314610ec25761034f565b806334a920eb116102a05780635429b7801161023e57806367ccdf381161021857806367ccdf3814610cf257806368077ab114610d6d5780636be6650f14610dc85780636c03e51114610e035761034f565b80635429b78014610c0d5780635a3b4bdc14610c5c5780635b2bdce214610c975761034f565b806335f8f56e1161027a57806335f8f56e14610ad557806344c9af2814610b30578063452788de14610b835780634bf7d65614610bd25761034f565b806334a920eb146108cf57806335425f541461094a578063356fb98a14610a7a5761034f565b80631bc69b841161030d5780632596ecfd116102e75780632596ecfd14610718578063287e96c1146107cc5780632e5c79731461082757806334a8de33146108805761034f565b80631bc69b84146105985780631efd0ae7146105fd578063207c76d0146106dd5761034f565b80621616f914610354578063010a38f5146103d9578063012d1096146104045780630beb19af1461047f5780631633a8b9146104e45780631b3322c314610549575b600080fd5b34801561036057600080fd5b506103976004803603604081101561037757600080fd5b810190808035906020019092919080359060200190929190505050611a0a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103e557600080fd5b506103ee611a6d565b6040518082815260200191505060405180910390f35b34801561041057600080fd5b5061043d6004803603602081101561042757600080fd5b8101908080359060200190929190505050611a82565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561048b57600080fd5b506104e2600480360360608110156104a257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611abf565b005b3480156104f057600080fd5b506105476004803603606081101561050757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ba6565b005b34801561055557600080fd5b506105826004803603602081101561056c57600080fd5b8101908080359060200190929190505050611c09565b6040518082815260200191505060405180910390f35b3480156105a457600080fd5b506105fb600480360360608110156105bb57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611c26565b005b34801561060957600080fd5b506106c36004803603602081101561062057600080fd5b810190808035906020019064010000000081111561063d57600080fd5b82018360208201111561064f57600080fd5b8035906020019184600183028401116401000000008311171561067157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611d0d565b604051808215151515815260200191505060405180910390f35b3480156106e957600080fd5b506107166004803603602081101561070057600080fd5b8101908080359060200190929190505050611dc9565b005b34801561072457600080fd5b506107516004803603602081101561073b57600080fd5b8101908080359060200190929190505050611df0565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610791578082015181840152602081019050610776565b50505050905090810190601f1680156107be5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156107d857600080fd5b50610825600480360360408110156107ef57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ea5565b005b34801561083357600080fd5b5061086a6004803603604081101561084a57600080fd5b810190808035906020019092919080359060200190929190505050611efb565b6040518082815260200191505060405180910390f35b34801561088c57600080fd5b506108b9600480360360208110156108a357600080fd5b8101908080359060200190929190505050611f3e565b6040518082815260200191505060405180910390f35b3480156108db57600080fd5b50610908600480360360208110156108f257600080fd5b8101908080359060200190929190505050611f5b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561095657600080fd5b50610a78600480360360e081101561096d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001906401000000008111156109be57600080fd5b8201836020820111156109d057600080fd5b803590602001918460018302840111640100000000831117156109f257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f98565b005b348015610a8657600080fd5b50610ad360048036036040811015610a9d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612752565b005b348015610ae157600080fd5b50610b2e60048036036040811015610af857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506127a8565b005b348015610b3c57600080fd5b50610b6960048036036020811015610b5357600080fd5b8101908080359060200190929190505050612817565b604051808215151515815260200191505060405180910390f35b348015610b8f57600080fd5b50610bbc60048036036020811015610ba657600080fd5b8101908080359060200190929190505050612841565b6040518082815260200191505060405180910390f35b348015610bde57600080fd5b50610c0b60048036036020811015610bf557600080fd5b810190808035906020019092919050505061285e565b005b348015610c1957600080fd5b50610c4660048036036020811015610c3057600080fd5b8101908080359060200190929190505050612884565b6040518082815260200191505060405180910390f35b348015610c6857600080fd5b50610c9560048036036020811015610c7f57600080fd5b81019080803590602001909291905050506128a1565b005b348015610ca357600080fd5b50610cf060048036036040811015610cba57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506128c7565b005b348015610cfe57600080fd5b50610d2b60048036036020811015610d1557600080fd5b810190808035906020019092919050505061293f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610d7957600080fd5b50610dc660048036036040811015610d9057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061297c565b005b348015610dd457600080fd5b50610e0160048036036020811015610deb57600080fd5b81019080803590602001909291905050506129d2565b005b348015610e0f57600080fd5b50610e4660048036036040811015610e2657600080fd5b8101908080359060200190929190803590602001909291905050506129f8565b005b348015610e5457600080fd5b50610e5d612a36565b6040518082815260200191505060405180910390f35b348015610e7f57600080fd5b50610eac60048036036020811015610e9657600080fd5b8101908080359060200190929190505050612a3f565b6040518082815260200191505060405180910390f35b348015610ece57600080fd5b50610fe6600480360360c0811015610ee557600080fd5b810190808035906020019092919080359060200190640100000000811115610f0c57600080fd5b820183602082011115610f1e57600080fd5b80359060200191846001830284011164010000000083111715610f4057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a5c565b005b348015610ff457600080fd5b506110416004803603604081101561100b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506130f2565b604051808215151515815260200191505060405180910390f35b34801561106757600080fd5b5061109e6004803603604081101561107e57600080fd5b810190808035906020019092919080359060200190929190505050613174565b6040518082815260200191505060405180910390f35b3480156110c057600080fd5b5061110d600480360360408110156110d757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506131b7565b005b34801561111b57600080fd5b506111526004803603604081101561113257600080fd5b810190808035906020019092919080359060200190929190505050613226565b005b34801561116057600080fd5b506111976004803603604081101561117757600080fd5b810190808035906020019092919080359060200190929190505050613242565b005b3480156111a557600080fd5b506111dc600480360360408110156111bc57600080fd5b810190808035906020019092919080359060200190929190505050613280565b6040518082815260200191505060405180910390f35b3480156111fe57600080fd5b506112356004803603604081101561121557600080fd5b810190808035906020019092919080359060200190929190505050613309565b6040518082815260200191505060405180910390f35b34801561125757600080fd5b5061128e6004803603604081101561126e57600080fd5b810190808035906020019092919080359060200190929190505050613392565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61131c600480360360408110156112e657600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506133f5565b005b34801561132a57600080fd5b506113ee6004803603604081101561134157600080fd5b81019080803590602001909291908035906020019064010000000081111561136857600080fd5b82018360208201111561137a57600080fd5b8035906020019184600183028401116401000000008311171561139c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506136af565b005b3480156113fc57600080fd5b506114496004803603604081101561141357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506136db565b6040518082815260200191505060405180910390f35b34801561146b57600080fd5b506114a46004803603604081101561148257600080fd5b8101908080359060200190929190803515159060200190929190505050613736565b005b3480156114b257600080fd5b506114df600480360360208110156114c957600080fd5b8101908080359060200190929190505050613765565b005b3480156114ed57600080fd5b506115246004803603604081101561150457600080fd5b81019080803590602001909291908035906020019092919050505061378b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561157257600080fd5b506115a96004803603604081101561158957600080fd5b8101908080359060200190929190803590602001909291905050506137ee565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156115f757600080fd5b506116246004803603602081101561160e57600080fd5b8101908080359060200190929190505050613851565b005b34801561163257600080fd5b5061165f6004803603602081101561164957600080fd5b8101908080359060200190929190505050613877565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156116ad57600080fd5b506116e4600480360360408110156116c457600080fd5b8101908080359060200190929190803590602001909291905050506138c5565b005b3480156116f257600080fd5b506117f66004803603608081101561170957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561175057600080fd5b82018360208201111561176257600080fd5b8035906020019184600183028401116401000000008311171561178457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506138e1565b005b34801561180457600080fd5b5061183b6004803603604081101561181b57600080fd5b810190808035906020019092919080359060200190929190505050613d44565b005b34801561184957600080fd5b506118806004803603604081101561186057600080fd5b810190808035906020019092919080359060200190929190505050613d60565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156118ce57600080fd5b506118fb600480360360208110156118e557600080fd5b8101908080359060200190929190505050613dc3565b6040518082815260200191505060405180910390f35b34801561191d57600080fd5b506119546004803603604081101561193457600080fd5b810190808035906020019092919080359060200190929190505050613de0565b005b34801561196257600080fd5b506119b96004803603606081101561197957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613dfc565b005b3480156119c757600080fd5b506119f4600480360360208110156119de57600080fd5b8101908080359060200190929190505050613e77565b6040518082815260200191505060405180910390f35b6000611a1583612a3f565b8210611a2057600080fd5b60046000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b60008060008154600101919050819055905090565b6000600c600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b81600f60008581526020019081526020016000206000611ade86611f3e565b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080601060008581526020019081526020016000206000611b4986611f3e565b815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ba183613765565b505050565b806016600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550505050565b600060086000838152602001908152602001600020549050919050565b81600460008581526020019081526020016000206000611c4586612a3f565b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600560008581526020019081526020016000206000611cb086612a3f565b815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611d08836128a1565b505050565b600080600090506000600190505b6000548111611dbf578380519060200120600260008381526020019081526020016000206040518082805460018160011615610100020316600290048015611d9a5780601f10611d78576101008083540402835291820191611d9a565b820191906000526020600020905b815481529060010190602001808311611d86575b505091505060405180910390201415611db257600191505b8080600101915050611d1b565b8192505050919050565b60126000828152602001908152602001600020600081548092919060019003919050555050565b6060600260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611e995780601f10611e6e57610100808354040283529160200191611e99565b820191906000526020600020905b815481529060010190602001808311611e7c57829003601f168201915b50505050509050919050565b806001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000611f0683611c09565b8210611f1157600080fd5b60076000848152602001908152602001600020600083815260200190815260200160002054905092915050565b600060116000838152602001908152602001600020549050919050565b60006013600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008514612064573373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff166334a920eb876040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561200857600080fd5b505afa15801561201c573d6000803e3d6000fd5b505050506040513d602081101561203257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff161461206357600080fd5b5b6000151561207185611d0d565b15151461207d57600080fd5b60008173ffffffffffffffffffffffffffffffffffffffff1663a3081c2a338a6040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b15801561210457600080fd5b505afa158015612118573d6000803e3d6000fd5b505050506040513d602081101561212e57600080fd5b810190808051906020019092919050505090508061214b57600080fd5b6000612155611a6d565b90506000308260405161216790613e94565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051809103906000f0801580156121c0573d6000803e3d6000fd5b5090506121cd8282611ea5565b6121d782336128c7565b6121e18233612752565b6121eb82886136af565b6121f6823388611ba6565b6122008286613de0565b60008473ffffffffffffffffffffffffffffffffffffffff16631b3322c38c6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561225357600080fd5b505afa158015612267573d6000803e3d6000fd5b505050506040513d602081101561227d57600080fd5b8101908080519060200190929190505050905060008090505b818110156124ca5760008673ffffffffffffffffffffffffffffffffffffffff1663c3e99c138e846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156122f957600080fd5b505afa15801561230d573d6000803e3d6000fd5b505050506040513d602081101561232357600080fd5b8101908080519060200190929190505050905060008773ffffffffffffffffffffffffffffffffffffffff16632e5c79738f856040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561239157600080fd5b505afa1580156123a5573d6000803e3d6000fd5b505050506040513d60208110156123bb57600080fd5b810190808051906020019092919050505090506123d886836131b7565b6123e28682613242565b60008090505b8273ffffffffffffffffffffffffffffffffffffffff16635429b780836040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561243957600080fd5b505afa15801561244d573d6000803e3d6000fd5b505050506040513d602081101561246357600080fd5b81019080805190602001909291905050508110156124ba576000612487838361378b565b905060006124958484613174565b90506124a189836127a8565b6124ab89826129f8565b505080806001019150506123e8565b5050508080600101915050612296565b506000891461257b578973ffffffffffffffffffffffffffffffffffffffff1663d653174b8a30866040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561256257600080fd5b505af1158015612576573d6000803e3d6000fd5b505050505b8473ffffffffffffffffffffffffffffffffffffffff16638bfb07c93330866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561263657600080fd5b505af115801561264a573d6000803e3d6000fd5b50505050612659836001613736565b612663838b61297c565b61266d838a6138c5565b7f8af4577531b6c53676c2ddaf1b411154b1e1386c340a8ce69494c0a500c68ed388843360405180806020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825285818151815260200191508051906020019080838360005b838110156127095780820151818401526020810190506126ee565b50505050905090810190601f1680156127365780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a15050505050505050505050565b806013600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b806009600084815260200190815260200160002060006127c785612884565b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60006015600083815260200190815260200160002060009054906101000a900460ff169050919050565b600060126000838152602001908152602001600020549050919050565b601260008281526020019081526020016000206000815480929190600101919050555050565b6000600b6000838152602001908152602001600020549050919050565b600e60008281526020019081526020016000206000815480929190600101919050555050565b806003600084815260200190815260200160002060006128e685612841565b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061293b8261285e565b5050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80600c600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600b60008281526020019081526020016000206000815480929190600101919050555050565b80600a60008481526020019081526020016000206000612a1785612884565b815260200190815260200160002081905550612a32826129d2565b5050565b60008054905090565b6000600e6000838152602001908152602001600020549050919050565b6064841115612a6a57606493505b60008273ffffffffffffffffffffffffffffffffffffffff1663a3081c2a33896040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b158015612af157600080fd5b505afa158015612b05573d6000803e3d6000fd5b505050506040513d6020811015612b1b57600080fd5b8101908080519060200190929190505050905080612b3857600080fd5b60001515612b4587611d0d565b151514612b5157600080fd5b6000612b5b611a6d565b905060003082604051612b6d90613e94565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051809103906000f080158015612bc6573d6000803e3d6000fd5b509050612bd38282611ea5565b612bdd82336128c7565b612be78233612752565b612bf182896136af565b612bfc823389611ba6565b612c068287613de0565b60008573ffffffffffffffffffffffffffffffffffffffff16631b3322c38b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015612c5957600080fd5b505afa158015612c6d573d6000803e3d6000fd5b505050506040513d6020811015612c8357600080fd5b8101908080519060200190929190505050905060008090505b81811015612df75760008773ffffffffffffffffffffffffffffffffffffffff1663c3e99c138d846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015612cff57600080fd5b505afa158015612d13573d6000803e3d6000fd5b505050506040513d6020811015612d2957600080fd5b8101908080519060200190929190505050905060008873ffffffffffffffffffffffffffffffffffffffff16632e5c79738e856040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015612d9757600080fd5b505afa158015612dab573d6000803e3d6000fd5b505050506040513d6020811015612dc157600080fd5b81019080805190602001909291905050509050612dde86836127a8565b612de886826129f8565b50508080600101915050612c9c565b508573ffffffffffffffffffffffffffffffffffffffff16638bfb07c93330866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b158015612eb357600080fd5b505af1158015612ec7573d6000803e3d6000fd5b50505050612ed6836001613736565b8473ffffffffffffffffffffffffffffffffffffffff1663a6fbe5b38a8a8a8a6040518563ffffffff1660e01b815260040180806020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825286818151815260200191508051906020019080838360005b83811015612f83578082015181840152602081019050612f68565b50505050905090810190601f168015612fb05780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612fd257600080fd5b505af1158015612fe6573d6000803e3d6000fd5b505050506040513d6020811015612ffc57600080fd5b8101908080519060200190929190505050507f8af4577531b6c53676c2ddaf1b411154b1e1386c340a8ce69494c0a500c68ed389843360405180806020018481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825285818151815260200191508051906020019080838360005b838110156130aa57808201518184015260208101905061308f565b50505050905090810190601f1680156130d75780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a150505050505050505050565b6000806000905060008061310586612841565b905060008092505b818310156131675761311f8784613d60565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141561315a57600193505b828060010193505061310d565b8394505050505092915050565b600061317f83612884565b821061318a57600080fd5b600a6000848152602001908152602001600020600083815260200190815260200160002054905092915050565b806006600084815260200190815260200160002060006131d685611c09565b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b80600b6000848152602001908152602001600020819055505050565b8060076000848152602001908152602001600020600061326185611c09565b81526020019081526020016000208190555061327c82613851565b5050565b600061328b83612a3f565b821061329657600080fd5b60056000848152602001908152602001600020600083815260200190815260200160002060006132c68585611a0a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061331483611f3e565b821061331f57600080fd5b601060008481526020019081526020016000206000838152602001908152602001600020600061334f8585613392565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061339d83611f3e565b82106133a857600080fd5b600f6000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6001151561340283612817565b15151461340e57600080fd5b61341782613dc3565b34101561342357600080fd5b600061342e83613e77565b141580156134445750600161344283612841565b145b1561362a578073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561348f573d6000803e3d6000fd5b506000151561349e83336130f2565b151514156134b1576134b082336128c7565b5b60006134bc83613e77565b905060006134c984611a82565b90508273ffffffffffffffffffffffffffffffffffffffff1663bea8df348284346040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018281526020019350505050600060405180830381600087803b15801561355a57600080fd5b505af115801561356e573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16638031338c8330876040518463ffffffff1660e01b8152600401808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b15801561360157600080fd5b505af1158015613615573d6000803e3d6000fd5b505050506136238433612752565b50506136ab565b600061363583611f5b565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561367d573d6000803e3d6000fd5b506000151561368c84336130f2565b1515141561369f5761369e83336128c7565b5b6136a98333612752565b505b5050565b806002600084815260200190815260200160002090805190602001906136d6929190613ea1565b505050565b60006016600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b806015600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b601160008281526020019081526020016000206000815480929190600101919050555050565b600061379683612884565b82106137a157600080fd5b60096000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b60006137f983611c09565b821061380457600080fd5b60066000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600860008281526020019081526020016000206000815480929190600101919050555050565b600060036000838152602001908152602001600020600080815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80600d6000848152602001908152602001600020819055505050565b60008173ffffffffffffffffffffffffffffffffffffffff166323fabea433856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b83811015613982578082015181840152602081019050613967565b50505050905090810190601f1680156139af5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156139cf57600080fd5b505af11580156139e3573d6000803e3d6000fd5b505050506040513d60208110156139f957600080fd5b8101908080519060200190929190505050905060008414613d065760008573ffffffffffffffffffffffffffffffffffffffff1663d02407d4866040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613a6757600080fd5b505afa158015613a7b573d6000803e3d6000fd5b505050506040513d6020811015613a9157600080fd5b8101908080519060200190929190505050905060008090505b81811015613d035760008773ffffffffffffffffffffffffffffffffffffffff166317ad810988846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015613b0d57600080fd5b505afa158015613b21573d6000803e3d6000fd5b505050506040513d6020811015613b3757600080fd5b8101908080519060200190929190505050905060008873ffffffffffffffffffffffffffffffffffffffff16632ade61c289856040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b158015613ba557600080fd5b505afa158015613bb9573d6000803e3d6000fd5b505050506040513d6020811015613bcf57600080fd5b810190808051906020019092919050505090508573ffffffffffffffffffffffffffffffffffffffff166384e44b1686846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b158015613c6957600080fd5b505af1158015613c7d573d6000803e3d6000fd5b505050508573ffffffffffffffffffffffffffffffffffffffff166394caf01486836040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b158015613cdc57600080fd5b505af1158015613cf0573d6000803e3d6000fd5b5050505050508080600101915050613aaa565b50505b7f30326c174c3f94e2a892ab1498dd967eeb7f8d7efcab9f0feca9bcc19f10175d816040518082815260200191505060405180910390a15050505050565b8060086000848152602001908152602001600020819055505050565b6000613d6b83612841565b8210613d7657600080fd5b60036000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600060146000838152602001908152602001600020549050919050565b8060146000848152602001908152602001600020819055505050565b613e0583611f5b565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614613e3c57600080fd5b60001515613e4a84846130f2565b15151415613e5d57613e5c83836128c7565b5b613e678383612752565b613e72838383611ba6565b505050565b6000600d6000838152602001908152602001600020549050919050565b61028680613f4783390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613ee257805160ff1916838001178555613f10565b82800160010185558215613f10579182015b82811115613f0f578251825591602001919060010190613ef4565b5b509050613f1d9190613f21565b5090565b613f4391905b80821115613f3f576000816000905550600101613f27565b5090565b9056fe608060405234801561001057600080fd5b506040516102863803806102868339818101604052604081101561003357600080fd5b810190808051906020019092919080519060200190929190505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060018190555050506101e0806100a66000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063010a38f514610051578063174ae4431461006f5780634c901b8c146100b3578063c929ccf3146100fd575b600080fd5b61005961012b565b6040518082815260200191505060405180910390f35b6100b16004803603602081101561008557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610135565b005b6100bb610178565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101296004803603602081101561011357600080fd5b81019080803590602001909291905050506101a1565b005b6000600154905090565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b806001819055505056fea265627a7a72315820337262970924ef14d97c33e7d020d43f97068e86f2060c10f26c206ff798808d64736f6c63430005110032a265627a7a72315820eb8bd6614f2fc56e0494189272a8524c85ebee51733be9fa5a5644f27de2e7f864736f6c63430005110032";
	
	public static final String FUNC_ADDFROMABSTRACTIPNUM = "addFromAbstractIpNum";

	public static final String FUNC_ADDFROMWORKNUM = "addFromWorkNum";

	public static final String FUNC_ADDONEOWNERNUM = "addOneOwnerNum";

	public static final String FUNC_ADDONEPROJECTNUM = "addOneProjectNum";

	public static final String FUNC_ADDONERIGHTNUM = "addOneRightNum";

	public static final String FUNC_DECREASEONEOWNERNUM = "decreaseOneOwnerNum";

	public static final String FUNC_GETFROMABSTRACTIP = "getFromAbstractIp";

	public static final String FUNC_GETFROMABSTRACTIPCONTRACT = "getFromAbstractIpContract";

	public static final String FUNC_GETFROMABSTRACTIPNUM = "getFromAbstractIpNum";

	public static final String FUNC_GETFROMPROJECTCONTRACT = "getFromProjectContract";

	public static final String FUNC_GETFROMPROJECTID = "getFromProjectId";

	public static final String FUNC_GETFROMWORK = "getFromWork";

	public static final String FUNC_GETFROMWORKCONTRACT = "getFromWorkContract";

	public static final String FUNC_GETFROMWORKNUM = "getFromWorkNum";

	public static final String FUNC_GETIPFSHASHBYWORKTOKENID = "getIpfsHashByWorkTokenId";

	public static final String FUNC_GETORIGINALAUTHOR = "getOriginalAuthor";

	public static final String FUNC_GETOWNERBYWORKTOKENIDANDINDEX = "getOwnerByWorkTokenIdAndIndex";

	public static final String FUNC_GETOWNERNUM = "getOwnerNum";

	public static final String FUNC_GETPRESENTOWNER = "getPresentOwner";

	public static final String FUNC_GETPRICE = "getPrice";

	public static final String FUNC_GETPROJECTCONTRACT = "getProjectContract";

	public static final String FUNC_GETPROJECTID = "getProjectId";

	public static final String FUNC_GETPROJECTNUM = "getProjectNum";

	public static final String FUNC_GETRIGHTCONTRACT = "getRightContract";

	public static final String FUNC_GETRIGHTID = "getRightId";

	public static final String FUNC_GETRIGHTNUM = "getRightNum";

	public static final String FUNC_GETSHAREBYWORKTOKENIDOWNER = "getShareByWorkTokenIdOwner";

	public static final String FUNC_GETSTATE = "getState";

	public static final String FUNC_GETSUPPLY = "getSupply";

	public static final String FUNC_GETTOKENADDRESS = "getTokenAddress";

	public static final String FUNC_GETTOKENID = "getTokenId";

	public static final String FUNC_JUDGE = "judge";

	public static final String FUNC_JUDGEWORKIFEXIST = "judgeWorkIfExist";

	public static final String FUNC_PURCHASE = "purchase";

	public static final String FUNC_RELEASE = "release";

	public static final String FUNC_RELEASEADAPT = "releaseAdapt";

	public static final String FUNC_SENDADAPTWORKCERTIFICATIONPROPOSALREQUEST = "sendAdaptWorkCertificationProposalRequest";

	public static final String FUNC_SETFROMABSTRACTIP = "setFromAbstractIp";

	public static final String FUNC_SETFROMABSTRACTIPCONTRACT = "setFromAbstractIpContract";

	public static final String FUNC_SETFROMABSTRACTIPNUM = "setFromAbstractIpNum";

	public static final String FUNC_SETFROMPROJECTCONTRACT = "setFromProjectContract";

	public static final String FUNC_SETFROMPROJECTID = "setFromProjectId";

	public static final String FUNC_SETFROMWORK = "setFromWork";

	public static final String FUNC_SETFROMWORKCONTRACT = "setFromWorkContract";

	public static final String FUNC_SETFROMWORKNUM = "setFromWorkNum";

	public static final String FUNC_SETIPFSHASHBYWORKTOKENID = "setIpfsHashByWorkTokenId";

	public static final String FUNC_SETOWNERSHIPBYWORKTOKENID = "setOwnerShipByWorkTokenId";

	public static final String FUNC_SETPRESENTOWNER = "setPresentOwner";

	public static final String FUNC_SETPRICE = "setPrice";

	public static final String FUNC_SETPROJECTID = "setProjectId";

	public static final String FUNC_SETRIGHTID = "setRightId";

	public static final String FUNC_SETSHAREBYWORKTOKENIDOWNER = "setShareByWorkTokenIdOwner";

	public static final String FUNC_SETSTATE = "setState";

	public static final String FUNC_SETTOKENADDRESS = "setTokenAddress";

	public static final String FUNC_TRANSFER = "transfer";

	public static final Event IPTOKEN_EVENT = new Event("ipToken",
			Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {
			}, new TypeReference<Uint256>() {
			}, new TypeReference<Address>() {
			}));;

	public static final Event PAY_EVENT = new Event("pay",
			Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {
			}, new TypeReference<Uint256>() {
			}));;

	public static final Event PROPOSAL_EVENT = new Event("proposal",
			Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {
			}));;

	@Deprecated
	protected Work(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice,
			BigInteger gasLimit) {
		super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
	}

	protected Work(String contractAddress, Web3j web3j, Credentials credentials,
			ContractGasProvider contractGasProvider) {
		super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
	}

	@Deprecated
	protected Work(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice,
			BigInteger gasLimit) {
		super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
	}

	protected Work(String contractAddress, Web3j web3j, TransactionManager transactionManager,
			ContractGasProvider contractGasProvider) {
		super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
	}

	public List<IpTokenEventResponse> getIpTokenEvents(TransactionReceipt transactionReceipt) {
		List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(IPTOKEN_EVENT, transactionReceipt);
		ArrayList<IpTokenEventResponse> responses = new ArrayList<IpTokenEventResponse>(valueList.size());
		for (Contract.EventValuesWithLog eventValues : valueList) {
			IpTokenEventResponse typedResponse = new IpTokenEventResponse();
			typedResponse.log = eventValues.getLog();
			typedResponse._ipfsHash = (String) eventValues.getNonIndexedValues().get(0).getValue();
			typedResponse._tokenId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
			typedResponse._creator = (String) eventValues.getNonIndexedValues().get(2).getValue();
			responses.add(typedResponse);
		}
		return responses;
	}

	public Flowable<IpTokenEventResponse> ipTokenEventFlowable(EthFilter filter) {
		return web3j.ethLogFlowable(filter).map(new Function<Log, IpTokenEventResponse>() {
			@Override
			public IpTokenEventResponse apply(Log log) {
				Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(IPTOKEN_EVENT, log);
				IpTokenEventResponse typedResponse = new IpTokenEventResponse();
				typedResponse.log = log;
				typedResponse._ipfsHash = (String) eventValues.getNonIndexedValues().get(0).getValue();
				typedResponse._tokenId = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
				typedResponse._creator = (String) eventValues.getNonIndexedValues().get(2).getValue();
				return typedResponse;
			}
		});
	}

	public Flowable<IpTokenEventResponse> ipTokenEventFlowable(DefaultBlockParameter startBlock,
			DefaultBlockParameter endBlock) {
		EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
		filter.addSingleTopic(EventEncoder.encode(IPTOKEN_EVENT));
		return ipTokenEventFlowable(filter);
	}

	public List<PayEventResponse> getPayEvents(TransactionReceipt transactionReceipt) {
		List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PAY_EVENT, transactionReceipt);
		ArrayList<PayEventResponse> responses = new ArrayList<PayEventResponse>(valueList.size());
		for (Contract.EventValuesWithLog eventValues : valueList) {
			PayEventResponse typedResponse = new PayEventResponse();
			typedResponse.log = eventValues.getLog();
			typedResponse._to = (String) eventValues.getNonIndexedValues().get(0).getValue();
			typedResponse._value = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
			responses.add(typedResponse);
		}
		return responses;
	}

	public Flowable<PayEventResponse> payEventFlowable(EthFilter filter) {
		return web3j.ethLogFlowable(filter).map(new Function<Log, PayEventResponse>() {
			@Override
			public PayEventResponse apply(Log log) {
				Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PAY_EVENT, log);
				PayEventResponse typedResponse = new PayEventResponse();
				typedResponse.log = log;
				typedResponse._to = (String) eventValues.getNonIndexedValues().get(0).getValue();
				typedResponse._value = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
				return typedResponse;
			}
		});
	}

	public Flowable<PayEventResponse> payEventFlowable(DefaultBlockParameter startBlock,
			DefaultBlockParameter endBlock) {
		EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
		filter.addSingleTopic(EventEncoder.encode(PAY_EVENT));
		return payEventFlowable(filter);
	}

	public List<ProposalEventResponse> getProposalEvents(TransactionReceipt transactionReceipt) {
		List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PROPOSAL_EVENT, transactionReceipt);
		ArrayList<ProposalEventResponse> responses = new ArrayList<ProposalEventResponse>(valueList.size());
		for (Contract.EventValuesWithLog eventValues : valueList) {
			ProposalEventResponse typedResponse = new ProposalEventResponse();
			typedResponse.log = eventValues.getLog();
			typedResponse._proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
			responses.add(typedResponse);
		}
		return responses;
	}

	public Flowable<ProposalEventResponse> proposalEventFlowable(EthFilter filter) {
		return web3j.ethLogFlowable(filter).map(new Function<Log, ProposalEventResponse>() {
			@Override
			public ProposalEventResponse apply(Log log) {
				Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PROPOSAL_EVENT, log);
				ProposalEventResponse typedResponse = new ProposalEventResponse();
				typedResponse.log = log;
				typedResponse._proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
				return typedResponse;
			}
		});
	}

	public Flowable<ProposalEventResponse> proposalEventFlowable(DefaultBlockParameter startBlock,
			DefaultBlockParameter endBlock) {
		EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
		filter.addSingleTopic(EventEncoder.encode(PROPOSAL_EVENT));
		return proposalEventFlowable(filter);
	}

	public RemoteFunctionCall<TransactionReceipt> addFromAbstractIpNum(BigInteger _workTokenId) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
				FUNC_ADDFROMABSTRACTIPNUM,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> addFromWorkNum(BigInteger _workTokenId) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ADDFROMWORKNUM,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> addOneOwnerNum(BigInteger _workTokenID) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ADDONEOWNERNUM,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> addOneProjectNum(BigInteger _workTokenID) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ADDONEPROJECTNUM,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> addOneRightNum(BigInteger _workTokenID) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ADDONERIGHTNUM,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> decreaseOneOwnerNum(BigInteger _workTokenID) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DECREASEONEOWNERNUM,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<BigInteger> getFromAbstractIp(BigInteger _workTokenId, BigInteger _index) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETFROMABSTRACTIP,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.generated.Uint256(_index)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {
				}));
		return executeRemoteCallSingleValueReturn(function, BigInteger.class);
	}

	public RemoteFunctionCall<String> getFromAbstractIpContract(BigInteger _workTokenId, BigInteger _index) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
				FUNC_GETFROMABSTRACTIPCONTRACT,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.generated.Uint256(_index)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {
				}));
		return executeRemoteCallSingleValueReturn(function, String.class);
	}

	public RemoteFunctionCall<BigInteger> getFromAbstractIpNum(BigInteger _workTokenId) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
				FUNC_GETFROMABSTRACTIPNUM,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {
				}));
		return executeRemoteCallSingleValueReturn(function, BigInteger.class);
	}

	public RemoteFunctionCall<String> getFromProjectContract(BigInteger _workTokenId) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
				FUNC_GETFROMPROJECTCONTRACT,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {
				}));
		return executeRemoteCallSingleValueReturn(function, String.class);
	}

	public RemoteFunctionCall<BigInteger> getFromProjectId(BigInteger _workTokenId) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETFROMPROJECTID,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {
				}));
		return executeRemoteCallSingleValueReturn(function, BigInteger.class);
	}

	public RemoteFunctionCall<BigInteger> getFromWork(BigInteger _workTokenId, BigInteger _index) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETFROMWORK,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.generated.Uint256(_index)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {
				}));
		return executeRemoteCallSingleValueReturn(function, BigInteger.class);
	}

	public RemoteFunctionCall<String> getFromWorkContract(BigInteger _workTokenId, BigInteger _index) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETFROMWORKCONTRACT,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.generated.Uint256(_index)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {
				}));
		return executeRemoteCallSingleValueReturn(function, String.class);
	}

	public RemoteFunctionCall<BigInteger> getFromWorkNum(BigInteger _workTokenId) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETFROMWORKNUM,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {
				}));
		return executeRemoteCallSingleValueReturn(function, BigInteger.class);
	}

	public RemoteFunctionCall<String> getIpfsHashByWorkTokenId(BigInteger _workTokenID) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
				FUNC_GETIPFSHASHBYWORKTOKENID,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {
				}));
		return executeRemoteCallSingleValueReturn(function, String.class);
	}

	public RemoteFunctionCall<String> getOriginalAuthor(BigInteger _workTokenID) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETORIGINALAUTHOR,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {
				}));
		return executeRemoteCallSingleValueReturn(function, String.class);
	}

	public RemoteFunctionCall<String> getOwnerByWorkTokenIdAndIndex(BigInteger _workTokenID, BigInteger _index) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
				FUNC_GETOWNERBYWORKTOKENIDANDINDEX,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID),
						new org.web3j.abi.datatypes.generated.Uint256(_index)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {
				}));
		return executeRemoteCallSingleValueReturn(function, String.class);
	}

	public RemoteFunctionCall<BigInteger> getOwnerNum(BigInteger _workTokenID) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETOWNERNUM,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {
				}));
		return executeRemoteCallSingleValueReturn(function, BigInteger.class);
	}

	public RemoteFunctionCall<String> getPresentOwner(BigInteger _workTokenID) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPRESENTOWNER,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {
				}));
		return executeRemoteCallSingleValueReturn(function, String.class);
	}

	public RemoteFunctionCall<BigInteger> getPrice(BigInteger _workTokenID) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPRICE,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {
				}));
		return executeRemoteCallSingleValueReturn(function, BigInteger.class);
	}

	public RemoteFunctionCall<String> getProjectContract(BigInteger _workTokenId, BigInteger _index) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPROJECTCONTRACT,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.generated.Uint256(_index)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {
				}));
		return executeRemoteCallSingleValueReturn(function, String.class);
	}

	public RemoteFunctionCall<BigInteger> getProjectId(BigInteger _workTokenId, BigInteger _index) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPROJECTID,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.generated.Uint256(_index)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {
				}));
		return executeRemoteCallSingleValueReturn(function, BigInteger.class);
	}

	public RemoteFunctionCall<BigInteger> getProjectNum(BigInteger _workTokenID) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPROJECTNUM,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {
				}));
		return executeRemoteCallSingleValueReturn(function, BigInteger.class);
	}

	public RemoteFunctionCall<String> getRightContract(BigInteger _workTokenId, BigInteger _index) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETRIGHTCONTRACT,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.generated.Uint256(_index)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {
				}));
		return executeRemoteCallSingleValueReturn(function, String.class);
	}

	public RemoteFunctionCall<BigInteger> getRightId(BigInteger _workTokenId, BigInteger _index) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETRIGHTID,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.generated.Uint256(_index)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {
				}));
		return executeRemoteCallSingleValueReturn(function, BigInteger.class);
	}

	public RemoteFunctionCall<BigInteger> getRightNum(BigInteger _workTokenID) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETRIGHTNUM,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {
				}));
		return executeRemoteCallSingleValueReturn(function, BigInteger.class);
	}

	public RemoteFunctionCall<BigInteger> getShareByWorkTokenIdOwner(BigInteger _workTokenID, String _owner) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
				FUNC_GETSHAREBYWORKTOKENIDOWNER,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID),
						new org.web3j.abi.datatypes.Address(160, _owner)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {
				}));
		return executeRemoteCallSingleValueReturn(function, BigInteger.class);
	}

	public RemoteFunctionCall<Boolean> getState(BigInteger _workTokenId) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETSTATE,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {
				}));
		return executeRemoteCallSingleValueReturn(function, Boolean.class);
	}

	public RemoteFunctionCall<BigInteger> getSupply() {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETSUPPLY,
				Arrays.<Type>asList(), Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {
				}));
		return executeRemoteCallSingleValueReturn(function, BigInteger.class);
	}

	public RemoteFunctionCall<String> getTokenAddress(BigInteger _ipTokenID) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETTOKENADDRESS,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_ipTokenID)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {
				}));
		return executeRemoteCallSingleValueReturn(function, String.class);
	}

	public RemoteFunctionCall<TransactionReceipt> getTokenId() {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETTOKENID,
				Arrays.<Type>asList(), Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<Boolean> judge(BigInteger _workTokenId, String _to) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_JUDGE,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.Address(160, _to)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {
				}));
		return executeRemoteCallSingleValueReturn(function, Boolean.class);
	}

	public RemoteFunctionCall<Boolean> judgeWorkIfExist(String _ipfsHash) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_JUDGEWORKIFEXIST,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_ipfsHash)),
				Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {
				}));
		return executeRemoteCallSingleValueReturn(function, Boolean.class);
	}

	public RemoteFunctionCall<TransactionReceipt> purchase(BigInteger _workTokenId, String _profitContract,
			BigInteger weiValue) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PURCHASE,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.Address(160, _profitContract)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function, weiValue);
	}

	public RemoteFunctionCall<TransactionReceipt> release(BigInteger _proposalId, String _ipfsHash, BigInteger _share,
			BigInteger _price, String _committee, String _abstractIpContract) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_RELEASE,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId),
						new org.web3j.abi.datatypes.Utf8String(_ipfsHash),
						new org.web3j.abi.datatypes.generated.Uint256(_share),
						new org.web3j.abi.datatypes.generated.Uint256(_price),
						new org.web3j.abi.datatypes.Address(160, _committee),
						new org.web3j.abi.datatypes.Address(160, _abstractIpContract)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> releaseAdapt(BigInteger _proposalId, String _projectContract,
			BigInteger _projectId, String _ipfsHash, BigInteger _share, BigInteger _price, String _committee) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_RELEASEADAPT,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId),
						new org.web3j.abi.datatypes.Address(160, _projectContract),
						new org.web3j.abi.datatypes.generated.Uint256(_projectId),
						new org.web3j.abi.datatypes.Utf8String(_ipfsHash),
						new org.web3j.abi.datatypes.generated.Uint256(_share),
						new org.web3j.abi.datatypes.generated.Uint256(_price),
						new org.web3j.abi.datatypes.Address(160, _committee)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> sendAdaptWorkCertificationProposalRequest(String _projectContract,
			BigInteger _projectId, String _ipfs, String _committee) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
				FUNC_SENDADAPTWORKCERTIFICATIONPROPOSALREQUEST,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _projectContract),
						new org.web3j.abi.datatypes.generated.Uint256(_projectId),
						new org.web3j.abi.datatypes.Utf8String(_ipfs),
						new org.web3j.abi.datatypes.Address(160, _committee)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> setFromAbstractIp(BigInteger _workTokenId,
			BigInteger _fromAbstractIp) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SETFROMABSTRACTIP,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.generated.Uint256(_fromAbstractIp)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> setFromAbstractIpContract(BigInteger _workTokenId,
			String _fromAbstractIpContract) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
				FUNC_SETFROMABSTRACTIPCONTRACT,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.Address(160, _fromAbstractIpContract)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> setFromAbstractIpNum(BigInteger _workTokenId,
			BigInteger _fromAbstractIpNum) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
				FUNC_SETFROMABSTRACTIPNUM,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.generated.Uint256(_fromAbstractIpNum)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> setFromProjectContract(BigInteger _workTokenId, String _contract) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
				FUNC_SETFROMPROJECTCONTRACT,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.Address(160, _contract)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> setFromProjectId(BigInteger _workTokenId, BigInteger _id) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SETFROMPROJECTID,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.generated.Uint256(_id)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> setFromWork(BigInteger _workTokenId, BigInteger _fromWork) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SETFROMWORK,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.generated.Uint256(_fromWork)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> setFromWorkContract(BigInteger _workTokenId,
			String _fromWorkContract) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SETFROMWORKCONTRACT,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.Address(160, _fromWorkContract)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> setFromWorkNum(BigInteger _workTokenId, BigInteger _fromWorkNum) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SETFROMWORKNUM,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.generated.Uint256(_fromWorkNum)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> setIpfsHashByWorkTokenId(BigInteger _workTokenID, String _ipfsHash) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
				FUNC_SETIPFSHASHBYWORKTOKENID,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID),
						new org.web3j.abi.datatypes.Utf8String(_ipfsHash)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> setOwnerShipByWorkTokenId(BigInteger _workTokenID, String _owner) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
				FUNC_SETOWNERSHIPBYWORKTOKENID,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID),
						new org.web3j.abi.datatypes.Address(160, _owner)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> setPresentOwner(BigInteger _workTokenID, String _presentOwner) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SETPRESENTOWNER,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID),
						new org.web3j.abi.datatypes.Address(160, _presentOwner)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> setPrice(BigInteger _workTokenID, BigInteger _price) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SETPRICE,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID),
						new org.web3j.abi.datatypes.generated.Uint256(_price)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> setProjectId(BigInteger _workTokenId, String _projectContract,
			BigInteger _projectId) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SETPROJECTID,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.Address(160, _projectContract),
						new org.web3j.abi.datatypes.generated.Uint256(_projectId)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> setRightId(BigInteger _workTokenId, String _rightContract,
			BigInteger _rightId) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SETRIGHTID,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.Address(160, _rightContract),
						new org.web3j.abi.datatypes.generated.Uint256(_rightId)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> setShareByWorkTokenIdOwner(BigInteger _workTokenID, String _owner,
			BigInteger _share) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
				FUNC_SETSHAREBYWORKTOKENIDOWNER,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID),
						new org.web3j.abi.datatypes.Address(160, _owner),
						new org.web3j.abi.datatypes.generated.Uint256(_share)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> setState(BigInteger _workTokenId, Boolean _state) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SETSTATE,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenId),
						new org.web3j.abi.datatypes.Bool(_state)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> setTokenAddress(BigInteger _ipTokenId, String _tokenAddress) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SETTOKENADDRESS,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_ipTokenId),
						new org.web3j.abi.datatypes.Address(160, _tokenAddress)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	public RemoteFunctionCall<TransactionReceipt> transfer(BigInteger _workTokenID, String _to, BigInteger _share) {
		final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_TRANSFER,
				Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_workTokenID),
						new org.web3j.abi.datatypes.Address(160, _to),
						new org.web3j.abi.datatypes.generated.Uint256(_share)),
				Collections.<TypeReference<?>>emptyList());
		return executeRemoteCallTransaction(function);
	}

	@Deprecated
	public static Work load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice,
			BigInteger gasLimit) {
		return new Work(contractAddress, web3j, credentials, gasPrice, gasLimit);
	}

	@Deprecated
	public static Work load(String contractAddress, Web3j web3j, TransactionManager transactionManager,
			BigInteger gasPrice, BigInteger gasLimit) {
		return new Work(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
	}

	public static Work load(String contractAddress, Web3j web3j, Credentials credentials,
			ContractGasProvider contractGasProvider) {
		return new Work(contractAddress, web3j, credentials, contractGasProvider);
	}

	public static Work load(String contractAddress, Web3j web3j, TransactionManager transactionManager,
			ContractGasProvider contractGasProvider) {
		return new Work(contractAddress, web3j, transactionManager, contractGasProvider);
	}

	public static RemoteCall<Work> deploy(Web3j web3j, Credentials credentials,
			ContractGasProvider contractGasProvider) {
		return deployRemoteCall(Work.class, web3j, credentials, contractGasProvider, BINARY, "");
	}

	@Deprecated
	public static RemoteCall<Work> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice,
			BigInteger gasLimit) {
		return deployRemoteCall(Work.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
	}

	public static RemoteCall<Work> deploy(Web3j web3j, TransactionManager transactionManager,
			ContractGasProvider contractGasProvider) {
		return deployRemoteCall(Work.class, web3j, transactionManager, contractGasProvider, BINARY, "");
	}

	@Deprecated
	public static RemoteCall<Work> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice,
			BigInteger gasLimit) {
		return deployRemoteCall(Work.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
	}

	public static class IpTokenEventResponse extends BaseEventResponse {
		public String _ipfsHash;

		public BigInteger _tokenId;

		public String _creator;
	}

	public static class PayEventResponse extends BaseEventResponse {
		public String _to;

		public BigInteger _value;
	}

	public static class ProposalEventResponse extends BaseEventResponse {
		public BigInteger _proposalId;
	}
}
