package com.example.demo.contract;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.5.16.
 */
@SuppressWarnings("rawtypes")
public class Committee extends Contract {
    public static final String BINARY = "608060405234801561001057600080fd5b50613bec806100206000396000f3fe608060405234801561001057600080fd5b50600436106103425760003560e01c806384e44b16116101b8578063c3e99c1311610104578063e57b8a28116100a2578063edab56031161007c578063edab5603146115c0578063f09d47ff14611604578063f0cf0acc14611666578063f650d335146116cc57610342565b8063e57b8a28146114b6578063e940cce5146114f8578063ec001f4b1461154657610342565b8063d70506d6116100de578063d70506d614611352578063ddb8bb341461138a578063e32835c51461141a578063e43dd8b61461147457610342565b8063c3e99c1314611226578063c579eda61461129e578063d622fa40146112cc57610342565b8063a2ae6de211610171578063ab761f171161014b578063ab761f17146110e6578063b68055c11461115e578063b8b7d532146111b6578063bd6b566a146111f857610342565b8063a2ae6de214610f73578063a3081c2a14610fd9578063a57c354d1461103f57610342565b806384e44b1614610cfe578063888b022e14610d4c5780638bfb07c914610dae57806394caf01414610e1c5780639adccf6414610e545780639f0f5dfa14610f1957610342565b80632e5c797311610292578063594667311161023057806365d5d7991161020a57806365d5d79914610bbc57806367ccdf3814610bfe5780636cb5e33014610c6c5780637080985314610cb057610342565b80635946673114610a865780635f90af2a14610ae057806360bd0c1d14610b4e57610342565b8063487b594e1161026c578063487b594e1461095a57806349e1a73c14610992578063532c27b814610a02578063534d163f14610a2057610342565b80632e5c79731461083c5780632f45e4061461088857806343cbd3ea146108c057610342565b8063145c8f5a116102ff5780631ccd2fb0116102d95780631ccd2fb01461067757806323fabea4146106af5780632646d0a21461079e578063287e96c1146107ee57610342565b8063145c8f5a146105355780631b3322c3146105bb5780631c9f20d9146105fd57610342565b8063010a38f51461034757806301edabf71461036557806304abc47d146103ab5780630b4918a91461041b5780630cd9bca9146104a15780631031dcf214610507575b600080fd5b61034f611732565b6040518082815260200191505060405180910390f35b6103916004803603602081101561037b57600080fd5b8101908080359060200190929190505050611747565b604051808215151515815260200191505060405180910390f35b610401600480360360608110156103c157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611825565b604051808215151515815260200191505060405180910390f35b6104876004803603606081101561043157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a3a565b604051808215151515815260200191505060405180910390f35b6104ed600480360360408110156104b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b3d565b604051808215151515815260200191505060405180910390f35b6105336004803603602081101561051d57600080fd5b8101908080359060200190929190505050611c4c565b005b6105a16004803603606081101561054b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c73565b604051808215151515815260200191505060405180910390f35b6105e7600480360360208110156105d157600080fd5b8101908080359060200190929190505050611d19565b6040518082815260200191505060405180910390f35b6106756004803603608081101561061357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803515159060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d36565b005b6106ad6004803603604081101561068d57600080fd5b810190808035906020019092919080359060200190929190505050611de1565b005b610788600480360360408110156106c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561070257600080fd5b82018360208201111561071457600080fd5b8035906020019184600183028401116401000000008311171561073657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611dfd565b6040518082815260200191505060405180910390f35b6107d4600480360360408110156107b457600080fd5b810190808035906020019092919080359060200190929190505050611f0a565b604051808215151515815260200191505060405180910390f35b61083a6004803603604081101561080457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fee565b005b6108726004803603604081101561085257600080fd5b810190808035906020019092919080359060200190929190505050612044565b6040518082815260200191505060405180910390f35b6108be6004803603604081101561089e57600080fd5b810190808035906020019092919080359060200190929190505050612087565b005b610940600480360360a08110156108d657600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506120a3565b604051808215151515815260200191505060405180910390f35b6109906004803603604081101561097057600080fd5b810190808035906020019092919080359060200190929190505050612365565b005b6109e8600480360360608110156109a857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612381565b604051808215151515815260200191505060405180910390f35b610a0a612629565b6040518082815260200191505060405180910390f35b610a6c60048036036040811015610a3657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061263f565b604051808215151515815260200191505060405180910390f35b610ade60048036036060811015610a9c57600080fd5b8101908080359060200190929190803515159060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061273d565b005b610b0c60048036036020811015610af657600080fd5b8101908080359060200190929190505050612844565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b7a60048036036020811015610b6457600080fd5b8101908080359060200190929190505050612881565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610be860048036036020811015610bd257600080fd5b81019080803590602001909291905050506128be565b6040518082815260200191505060405180910390f35b610c2a60048036036020811015610c1457600080fd5b81019080803590602001909291905050506128db565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610cae60048036036060811015610c8257600080fd5b810190808035906020019092919080359060200190929190803515159060200190929190505050612918565b005b610cfc60048036036040811015610cc657600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612a2a565b005b610d4a60048036036040811015610d1457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612aa8565b005b610d9860048036036040811015610d6257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612b17565b6040518082815260200191505060405180910390f35b610e1a60048036036060811015610dc457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612b72565b005b610e5260048036036040811015610e3257600080fd5b810190808035906020019092919080359060200190929190505050612c59565b005b610f1760048036036040811015610e6a57600080fd5b810190808035906020019092919080359060200190640100000000811115610e9157600080fd5b820183602082011115610ea357600080fd5b80359060200191846001830284011164010000000083111715610ec557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612c97565b005b610f7160048036036060811015610f2f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050612cc3565b005b610fbf60048036036040811015610f8957600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612d30565b604051808215151515815260200191505060405180910390f35b61102560048036036040811015610fef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612d98565b604051808215151515815260200191505060405180910390f35b61106b6004803603602081101561105557600080fd5b8101908080359060200190929190505050612f47565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156110ab578082015181840152602081019050611090565b50505050905090810190601f1680156110d85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61111c600480360360408110156110fc57600080fd5b810190808035906020019092919080359060200190929190505050612ffc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6111b46004803603606081101561117457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050613064565b005b6111e2600480360360208110156111cc57600080fd5b8101908080359060200190929190505050613110565b6040518082815260200191505060405180910390f35b6112246004803603602081101561120e57600080fd5b810190808035906020019092919050505061312d565b005b61125c6004803603604081101561123c57600080fd5b810190808035906020019092919080359060200190929190505050613153565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6112ca600480360360208110156112b457600080fd5b81019080803590602001909291905050506131b6565b005b611338600480360360608110156112e257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506131dc565b604051808215151515815260200191505060405180910390f35b6113886004803603604081101561136857600080fd5b810190808035906020019092919080359060200190929190505050613282565b005b611400600480360360808110156113a057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061329e565b604051808215151515815260200191505060405180910390f35b6114726004803603606081101561143057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506134b7565b005b6114a06004803603602081101561148a57600080fd5b8101908080359060200190929190505050613524565b6040518082815260200191505060405180910390f35b6114e2600480360360208110156114cc57600080fd5b8101908080359060200190929190505050613541565b6040518082815260200191505060405180910390f35b6115446004803603604081101561150e57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061355e565b005b6115be6004803603608081101561155c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803515159060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506135b4565b005b611602600480360360208110156115d657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061365f565b005b6116506004803603604081101561161a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506136a3565b6040518082815260200191505060405180910390f35b6116b26004803603604081101561167c57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061372d565b604051808215151515815260200191505060405180910390f35b611718600480360360408110156116e257600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613795565b604051808215151515815260200191505060405180910390f35b60008060008154600101919050819055905090565b600080600061175584613524565b905060008092505b8183101561181d5761176f8584612ffc565b90507f53f82c52ae8adc311a7455b7537d334442761d42b46068bce47387d14c715df3858233604051808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001935050505060405180910390a1828060010193505061175d565b505050919050565b6000808373ffffffffffffffffffffffffffffffffffffffff16635429b780846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561187957600080fd5b505afa15801561188d573d6000803e3d6000fd5b505050506040513d60208110156118a357600080fd5b8101908080519060200190929190505050905060006001905060008090505b82811015611a2d5760008673ffffffffffffffffffffffffffffffffffffffff1663ba8b5e6087846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561192557600080fd5b505afa158015611939573d6000803e3d6000fd5b505050506040513d602081101561194f57600080fd5b8101908080519060200190929190505050905060008773ffffffffffffffffffffffffffffffffffffffff166380db10f588856040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b1580156119bd57600080fd5b505afa1580156119d1573d6000803e3d6000fd5b505050506040513d60208110156119e757600080fd5b810190808051906020019092919050505090506000611a0683836136a3565b9050848015611a1b5750611a1a8a82611f0a565b5b945050505080806001019150506118c2565b5080925050509392505050565b6000611a4583612844565b73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611a7c57600080fd5b600080611a8885611d19565b905060006001905060008093505b82841015611b2f57600090506000611aae8886613153565b90506000611abc8987612044565b90506000611aca83836136a3565b9050611ad98a828b86866120a3565b9450604051806060016040528060328152602001613b866032913980519060200120611b048b612f47565b8051906020012014611b1f57611b1c8a84848c61329e565b94505b5050508380600101945050611a96565b819450505050509392505050565b6000806000611b4b84613524565b9050600060019050600092505b81831015611c28576000611b6c8685612ffc565b905060001515600a60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600088815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415611c1a57600091505b508280600101935050611b58565b600115158115151415611c4057611c3f8587612a2a565b5b80935050505092915050565b60066000828152602001908152602001600020600081548092919060019003919050555050565b6000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b600060126000838152602001908152602001600020549050919050565b81600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b80600e6000848152602001908152602001600020819055505050565b600080611e08612629565b905060003082604051611e1a9061384d565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051809103906000f080158015611e73573d6000803e3d6000fd5b509050611e808282611fee565b611e8a8285612c97565b611e94828661355e565b7f9daca102ccda3ee46608024318750c01714b4b038515edf034e81ec7979a15c68230604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1819250505092915050565b600080611f1683613524565b9050600060019050600080905060008090505b83811015611fc0576000611f3d8783612ffc565b905060011515600860008a815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415611fb25782806001019350505b508080600101915050611f29565b50611fca85613541565b836064830281611fd657fe5b041015611fe257600091505b81935050505092915050565b806002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600061204f83611d19565b821061205a57600080fd5b60116000848152602001908152602001600020600083815260200190815260200160002054905092915050565b80600f6000848152602001908152602001600020819055505050565b6000806120af86613524565b90506000600190506000809050600080905060008090505b848110156123485760006120db8b83612ffc565b905060011515600860008e815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415612244578973ffffffffffffffffffffffffffffffffffffffff1663f6f2f4dc828b8b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b15801561220057600080fd5b505afa158015612214573d6000803e3d6000fd5b505050506040513d602081101561222a57600080fd5b81019080805190602001909291905050508401935061233a565b8973ffffffffffffffffffffffffffffffffffffffff1663f6f2f4dc828b8b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060206040518083038186803b1580156122fd57600080fd5b505afa158015612311573d6000803e3d6000fd5b505050506040513d602081101561232757600080fd5b8101908080519060200190929190505050505b5080806001019150506120c7565b5080821161235557600092505b8294505050505095945050505050565b8060076000848152602001908152602001600020819055505050565b6000808373ffffffffffffffffffffffffffffffffffffffff16635429b780846040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156123d557600080fd5b505afa1580156123e9573d6000803e3d6000fd5b505050506040513d60208110156123ff57600080fd5b8101908080519060200190929190505050905060006001905060008090505b8281101561261c5760008673ffffffffffffffffffffffffffffffffffffffff1663ba8b5e6087846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561248157600080fd5b505afa158015612495573d6000803e3d6000fd5b505050506040513d60208110156124ab57600080fd5b8101908080519060200190929190505050905060008773ffffffffffffffffffffffffffffffffffffffff166380db10f588856040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561251957600080fd5b505afa15801561252d573d6000803e3d6000fd5b505050506040513d602081101561254357600080fd5b81019080805190602001909291905050509050600061256283836136a3565b9050600061256f82613524565b905060008090505b8181101561260a57600061258b8483612ffc565b905060001515600860008f815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514156125fc57600097505b508080600101915050612577565b5050505050808060010191505061241e565b5080925050509392505050565b6000600160008154600101919050819055905090565b600061264a82612844565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461268157600080fd5b60008061268d84611d19565b905060006001905060008093505b82841015612730576000905060006126b38786613153565b905060006126c18887612044565b905060006126cf83836136a3565b90506126db8982611f0a565b9450604051806060016040528060328152602001613b8660329139805190602001206127068a612f47565b80519060200120146127205761271d898484611825565b94505b505050838060010194505061269b565b8194505050505092915050565b6127478333613795565b61275057600080fd5b61275c338484846135b4565b6127693384600184611d36565b60008061277585613524565b905060008092505b818310156127c15760006127918785612ffc565b9050600115156127a28289886131dc565b151514156127b35781806001019250505b50828060010193505061277d565b7f85f45c8d7d968aea946888eaa49afbe77bf7b11316fbba2fb79ab7138780dbc486858484604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a1505050505050565b6000600d600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600f6000838152602001908152602001600020549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6129228333613795565b61292b57600080fd5b612936823383612cc3565b612942823360016134b7565b60008061294e85613524565b905060008092505b8183101561299957600061296a8785612ffc565b90506001151561297a8783612d30565b1515141561298b5781806001019250505b508280600101935050612956565b60006129a486612844565b90507f869c1687afa4a2e11f949f74c4afa141d4c013d34d7e4c1fe2d627eab5bc126886828585604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182815260200194505050505060405180910390a150505050505050565b6000612a3583613524565b90508160056000858152602001908152602001600020600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612aa38361312d565b505050565b80601060008481526020019081526020016000206000612ac785611d19565b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60006003600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000612b7c611732565b9050612b89818484613064565b60006006600083815260200190815260200160002081905550612bac8185612a2a565b7fecaeb4ef5573b5143ffe32d7ea6d859f9821f9ba03aad9547a46fb287efc596181308585604051808581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200194505050505060405180910390a150505050565b80601160008481526020019081526020016000206000612c7885611d19565b815260200190815260200160002081905550612c93826131b6565b5050565b80600c60008481526020019081526020016000209080519060200190612cbe92919061385a565b505050565b806008600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b60006009600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080821415612dab5760019050612f41565b612db482612844565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612deb57600080fd5b6000806000612df985611d19565b905060006001905060008093505b82841015612f38576000612e1b8886613153565b90506000612e298987612044565b90506000612e3783836136a3565b90506000612e4482613524565b9050600098505b80891015612edb57612e5d828a612ffc565b945060001515600860008d815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415612ece57600095505b8880600101995050612e4b565b604051806060016040528060328152602001613b866032913980519060200120612f048c612f47565b8051906020012014612f2757858015612f245750612f238b8585612381565b5b95505b505050508380600101945050612e07565b81955050505050505b92915050565b6060600c60008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612ff05780601f10612fc557610100808354040283529160200191612ff0565b820191906000526020600020905b815481529060010190602001808311612fd357829003601f168201915b50505050509050919050565b60008061300884613524565b905080831061301657600080fd5b60056000858152602001908152602001600020600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505092915050565b806003600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6000600e6000838152602001908152602001600020549050919050565b600660008281526020019081526020016000206000815480929190600101919050555050565b600061315e83611d19565b821061316957600080fd5b60106000848152602001908152602001600020600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b601260008281526020019081526020016000206000815480929190600101919050555050565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1690509392505050565b8060126000848152602001908152602001600020819055505050565b6000808473ffffffffffffffffffffffffffffffffffffffff16635429b780856040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156132f257600080fd5b505afa158015613306573d6000803e3d6000fd5b505050506040513d602081101561331c57600080fd5b8101908080519060200190929190505050905060006001905060008090505b828110156134a95760008773ffffffffffffffffffffffffffffffffffffffff1663ba8b5e6088846040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561339e57600080fd5b505afa1580156133b2573d6000803e3d6000fd5b505050506040513d60208110156133c857600080fd5b8101908080519060200190929190505050905060008873ffffffffffffffffffffffffffffffffffffffff166380db10f589856040518363ffffffff1660e01b8152600401808381526020018281526020019250505060206040518083038186803b15801561343657600080fd5b505afa15801561344a573d6000803e3d6000fd5b505050506040513d602081101561346057600080fd5b81019080805190602001909291905050509050600061347f83836136a3565b905084801561349757506134968b828a86866120a3565b5b9450505050808060010191505061333b565b508092505050949350505050565b806009600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b600060066000838152602001908152602001600020549050919050565b600060076000838152602001908152602001600020549050919050565b80600d600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b81600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b80601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806000809050600191505b600054821161372257836003600084815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541415613715578190505b81806001019250506136b0565b809250505092915050565b60006008600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008060006137a385613524565b90506000809050600092505b81831015613841578473ffffffffffffffffffffffffffffffffffffffff1660056000888152602001908152602001600020600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561383457600190505b82806001019350506137af565b80935050505092915050565b6102868061390083390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061389b57805160ff19168380011785556138c9565b828001600101855582156138c9579182015b828111156138c85782518255916020019190600101906138ad565b5b5090506138d691906138da565b5090565b6138fc91905b808211156138f85760008160009055506001016138e0565b5090565b9056fe608060405234801561001057600080fd5b506040516102863803806102868339818101604052604081101561003357600080fd5b810190808051906020019092919080519060200190929190505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060018190555050506101e0806100a66000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063010a38f514610051578063174ae4431461006f5780634c901b8c146100b3578063c929ccf3146100fd575b600080fd5b61005961012b565b6040518082815260200191505060405180910390f35b6100b16004803603602081101561008557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610135565b005b6100bb610178565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101296004803603602081101561011357600080fd5b81019080803590602001909291905050506101a1565b005b6000600154905090565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b806001819055505056fea265627a7a72315820f50fd5cccf8eb98b830e60366dd35a46fef79db7e6c863bebc794a60a89ceb3b64736f6c634300051100325265717565737420746f207075626c69736820416273747261637420495020636f72726573706f6e64696e6720776f726b73a265627a7a72315820426e2c940f8c1a0bdd693610ca05da6b9e7ebc522142af46b61ace34d28c023164736f6c63430005110032";

    public static final String FUNC_ADDCOMMITTEEMEMBERNUM = "addCommitteeMemberNum";

    public static final String FUNC_ADDFROMWORKNUM = "addFromWorkNum";

    public static final String FUNC_APPLYJOINCOMMOTTEE = "applyJoinCommottee";

    public static final String FUNC_DECREASECOMMITTEEMEMBERNUM = "decreaseCommitteeMemberNum";

    public static final String FUNC_GETABSTRACTIPVOTEINGRESULT = "getAbstractIpVoteingResult";

    public static final String FUNC_GETABSTRACTIPVOTEINGRESULT2 = "getAbstractIpVoteingResult2";

    public static final String FUNC_GETABSTRACTIPVOTEINGRESULT3 = "getAbstractIpVoteingResult3";

    public static final String FUNC_GETAPPLYFINALRESULT = "getApplyFinalResult";

    public static final String FUNC_GETAPPLYRESULT = "getApplyResult";

    public static final String FUNC_GETAPPLYVOTEINGSTATE = "getApplyVoteingState";

    public static final String FUNC_GETCOMMITTEEMEMBER = "getCommitteeMember";

    public static final String FUNC_GETCOMMITTEEMEMBERNUM = "getCommitteeMemberNum";

    public static final String FUNC_GETCOMMITTEEPROPORTION = "getCommitteeProportion";

    public static final String FUNC_GETCOMMITTEETOWORKTOKENCONTRACT = "getCommitteeToWorkTokenContract";

    public static final String FUNC_GETCOMMITTEETOWORKTOKENID = "getCommitteeToWorkTokenId";

    public static final String FUNC_GETFROMWORK = "getFromWork";

    public static final String FUNC_GETFROMWORKCONTRACT = "getFromWorkContract";

    public static final String FUNC_GETFROMWORKNUM = "getFromWorkNum";

    public static final String FUNC_GETPROPOSALCOMMITTEE = "getProposalCommittee";

    public static final String FUNC_GETPROPOSALDESCRIBE = "getProposalDescribe";

    public static final String FUNC_GETPROPOSALFINALRESULT = "getProposalFinalResult";

    public static final String FUNC_GETPROPOSALFINALRESULT2 = "getProposalFinalResult2";

    public static final String FUNC_GETPROPOSALFINALRESULT3 = "getProposalFinalResult3";

    public static final String FUNC_GETPROPOSALID = "getProposalId";

    public static final String FUNC_GETPROPOSALPROPORTION = "getProposalProportion";

    public static final String FUNC_GETPROPOSALPROPOSER = "getProposalProposer";

    public static final String FUNC_GETPROPOSALRESULT = "getProposalResult";

    public static final String FUNC_GETPROPOSALVOTEINGSTATE = "getProposalVoteingState";

    public static final String FUNC_GETTOKENADDRESS = "getTokenAddress";

    public static final String FUNC_GETTOKENID = "getTokenId";

    public static final String FUNC_GETVOTEINGRESULT2 = "getVoteingResult2";

    public static final String FUNC_GETVOTEINGRESULT3 = "getVoteingResult3";

    public static final String FUNC_JUDGEVOTER = "judgeVoter";

    public static final String FUNC_PROPOSAL = "proposal";

    public static final String FUNC_RELEASE = "release";

    public static final String FUNC_SEARCHCOMMITTEEIDBYWORKID = "searchCommitteeIdByWorkId";

    public static final String FUNC_SETADAPTRIGHTCONTRACT = "setAdaptRightContract";

    public static final String FUNC_SETAPPLYRESULT = "setApplyResult";

    public static final String FUNC_SETAPPLYVOTEINGSTATE = "setApplyVoteingState";

    public static final String FUNC_SETCOMMITTEEMEMBER = "setCommitteeMember";

    public static final String FUNC_SETCOMMITTEEPROPORTION = "setCommitteeProportion";

    public static final String FUNC_SETCOMMITTEETOWORKTOKENID = "setCommitteeToWorkTokenId";

    public static final String FUNC_SETFROMWORK = "setFromWork";

    public static final String FUNC_SETFROMWORKCONTRACT = "setFromWorkContract";

    public static final String FUNC_SETFROMWORKNUM = "setFromWorkNum";

    public static final String FUNC_SETPROPOSALCOMMITTEE = "setProposalCommittee";

    public static final String FUNC_SETPROPOSALDECRIBE = "setProposalDecribe";

    public static final String FUNC_SETPROPOSALPROPORTION = "setProposalProportion";

    public static final String FUNC_SETPROPOSALPROPOSER = "setProposalProposer";

    public static final String FUNC_SETPROPOSALRESULT = "setProposalResult";

    public static final String FUNC_SETPROPOSALVOTEINGSTATE = "setProposalVoteingState";

    public static final String FUNC_SETTOKENADDRESS = "setTokenAddress";

    public static final String FUNC_VOTEAPPLY = "voteApply";

    public static final String FUNC_VOTEPROPOSAL = "voteProposal";

    public static final Event AFTERPROPOSAL_EVENT = new Event("afterProposal", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event AFTERRELEASE_EVENT = new Event("afterRelease", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event APPLYVOTEPROGRESS_EVENT = new Event("applyVoteProgress", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event APPLYVOTEINFO_EVENT = new Event("applyVoteinfo", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}));
    ;

    public static final Event PROPOSALVOTEPROGRESS_EVENT = new Event("proposalVoteProgress", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event PROPOSALVOTEINFO_EVENT = new Event("proposalVoteinfo", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
    ;

    @Deprecated
    protected Committee(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Committee(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Committee(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Committee(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<AfterProposalEventResponse> getAfterProposalEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(AFTERPROPOSAL_EVENT, transactionReceipt);
        ArrayList<AfterProposalEventResponse> responses = new ArrayList<AfterProposalEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            AfterProposalEventResponse typedResponse = new AfterProposalEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._contractAddress = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<AfterProposalEventResponse> afterProposalEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, AfterProposalEventResponse>() {
            @Override
            public AfterProposalEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(AFTERPROPOSAL_EVENT, log);
                AfterProposalEventResponse typedResponse = new AfterProposalEventResponse();
                typedResponse.log = log;
                typedResponse._id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._contractAddress = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<AfterProposalEventResponse> afterProposalEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(AFTERPROPOSAL_EVENT));
        return afterProposalEventFlowable(filter);
    }

    public List<AfterReleaseEventResponse> getAfterReleaseEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(AFTERRELEASE_EVENT, transactionReceipt);
        ArrayList<AfterReleaseEventResponse> responses = new ArrayList<AfterReleaseEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            AfterReleaseEventResponse typedResponse = new AfterReleaseEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._committeeContractAddress = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._workContractAddress = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._workId = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<AfterReleaseEventResponse> afterReleaseEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, AfterReleaseEventResponse>() {
            @Override
            public AfterReleaseEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(AFTERRELEASE_EVENT, log);
                AfterReleaseEventResponse typedResponse = new AfterReleaseEventResponse();
                typedResponse.log = log;
                typedResponse._id = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._committeeContractAddress = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._workContractAddress = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._workId = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<AfterReleaseEventResponse> afterReleaseEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(AFTERRELEASE_EVENT));
        return afterReleaseEventFlowable(filter);
    }

    public List<ApplyVoteProgressEventResponse> getApplyVoteProgressEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(APPLYVOTEPROGRESS_EVENT, transactionReceipt);
        ArrayList<ApplyVoteProgressEventResponse> responses = new ArrayList<ApplyVoteProgressEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ApplyVoteProgressEventResponse typedResponse = new ApplyVoteProgressEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._committeeTokenId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._applicant = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._totalmember = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._finished = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ApplyVoteProgressEventResponse> applyVoteProgressEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ApplyVoteProgressEventResponse>() {
            @Override
            public ApplyVoteProgressEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(APPLYVOTEPROGRESS_EVENT, log);
                ApplyVoteProgressEventResponse typedResponse = new ApplyVoteProgressEventResponse();
                typedResponse.log = log;
                typedResponse._committeeTokenId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._applicant = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._totalmember = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._finished = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ApplyVoteProgressEventResponse> applyVoteProgressEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPLYVOTEPROGRESS_EVENT));
        return applyVoteProgressEventFlowable(filter);
    }

    public List<ApplyVoteinfoEventResponse> getApplyVoteinfoEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(APPLYVOTEINFO_EVENT, transactionReceipt);
        ArrayList<ApplyVoteinfoEventResponse> responses = new ArrayList<ApplyVoteinfoEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ApplyVoteinfoEventResponse typedResponse = new ApplyVoteinfoEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._committeeTokenId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._voter = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._applicant = (String) eventValues.getNonIndexedValues().get(2).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ApplyVoteinfoEventResponse> applyVoteinfoEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ApplyVoteinfoEventResponse>() {
            @Override
            public ApplyVoteinfoEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(APPLYVOTEINFO_EVENT, log);
                ApplyVoteinfoEventResponse typedResponse = new ApplyVoteinfoEventResponse();
                typedResponse.log = log;
                typedResponse._committeeTokenId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._voter = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._applicant = (String) eventValues.getNonIndexedValues().get(2).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ApplyVoteinfoEventResponse> applyVoteinfoEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(APPLYVOTEINFO_EVENT));
        return applyVoteinfoEventFlowable(filter);
    }

    public List<ProposalVoteProgressEventResponse> getProposalVoteProgressEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PROPOSALVOTEPROGRESS_EVENT, transactionReceipt);
        ArrayList<ProposalVoteProgressEventResponse> responses = new ArrayList<ProposalVoteProgressEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ProposalVoteProgressEventResponse typedResponse = new ProposalVoteProgressEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._proposer = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._totalmember = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._finished = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ProposalVoteProgressEventResponse> proposalVoteProgressEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ProposalVoteProgressEventResponse>() {
            @Override
            public ProposalVoteProgressEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PROPOSALVOTEPROGRESS_EVENT, log);
                ProposalVoteProgressEventResponse typedResponse = new ProposalVoteProgressEventResponse();
                typedResponse.log = log;
                typedResponse._proposalId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._proposer = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._totalmember = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._finished = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ProposalVoteProgressEventResponse> proposalVoteProgressEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PROPOSALVOTEPROGRESS_EVENT));
        return proposalVoteProgressEventFlowable(filter);
    }

    public List<ProposalVoteinfoEventResponse> getProposalVoteinfoEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PROPOSALVOTEINFO_EVENT, transactionReceipt);
        ArrayList<ProposalVoteinfoEventResponse> responses = new ArrayList<ProposalVoteinfoEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            ProposalVoteinfoEventResponse typedResponse = new ProposalVoteinfoEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse._committeeTokenId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse._voter = (String) eventValues.getNonIndexedValues().get(1).getValue();
            typedResponse._proposser = (String) eventValues.getNonIndexedValues().get(2).getValue();
            typedResponse._workContract = (String) eventValues.getNonIndexedValues().get(3).getValue();
            typedResponse._workTokenId = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
            typedResponse._depict = (String) eventValues.getNonIndexedValues().get(5).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<ProposalVoteinfoEventResponse> proposalVoteinfoEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, ProposalVoteinfoEventResponse>() {
            @Override
            public ProposalVoteinfoEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PROPOSALVOTEINFO_EVENT, log);
                ProposalVoteinfoEventResponse typedResponse = new ProposalVoteinfoEventResponse();
                typedResponse.log = log;
                typedResponse._committeeTokenId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse._voter = (String) eventValues.getNonIndexedValues().get(1).getValue();
                typedResponse._proposser = (String) eventValues.getNonIndexedValues().get(2).getValue();
                typedResponse._workContract = (String) eventValues.getNonIndexedValues().get(3).getValue();
                typedResponse._workTokenId = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
                typedResponse._depict = (String) eventValues.getNonIndexedValues().get(5).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<ProposalVoteinfoEventResponse> proposalVoteinfoEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PROPOSALVOTEINFO_EVENT));
        return proposalVoteinfoEventFlowable(filter);
    }

    public RemoteFunctionCall<TransactionReceipt> addCommitteeMemberNum(BigInteger _committeeTokenID) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDCOMMITTEEMEMBERNUM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addFromWorkNum(BigInteger _proposalTokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDFROMWORKNUM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalTokenId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> applyJoinCommottee(BigInteger _committeeTokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_APPLYJOINCOMMOTTEE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> decreaseCommitteeMemberNum(BigInteger _committeeTokenID) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_DECREASECOMMITTEEMEMBERNUM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> getAbstractIpVoteingResult(BigInteger _proposalId, String _workContract, BigInteger _workId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETABSTRACTIPVOTEINGRESULT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId), 
                new org.web3j.abi.datatypes.Address(160, _workContract), 
                new org.web3j.abi.datatypes.generated.Uint256(_workId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> getAbstractIpVoteingResult2(BigInteger _proposalId, String _workContract, BigInteger _workId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETABSTRACTIPVOTEINGRESULT2, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId), 
                new org.web3j.abi.datatypes.Address(160, _workContract), 
                new org.web3j.abi.datatypes.generated.Uint256(_workId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> getAbstractIpVoteingResult3(BigInteger _proposalId, String _workContract, BigInteger _workId, String _shares) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETABSTRACTIPVOTEINGRESULT3, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId), 
                new org.web3j.abi.datatypes.Address(160, _workContract), 
                new org.web3j.abi.datatypes.generated.Uint256(_workId), 
                new org.web3j.abi.datatypes.Address(160, _shares)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> getApplyFinalResult(String _applicant, BigInteger _committeeTokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GETAPPLYFINALRESULT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _applicant), 
                new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> getApplyResult(String _applicant, BigInteger _committeeTokenId, String _voter) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETAPPLYRESULT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _applicant), 
                new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenId), 
                new org.web3j.abi.datatypes.Address(160, _voter)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> getApplyVoteingState(String _voter, BigInteger _committeeTokenId, String _applicant) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETAPPLYVOTEINGSTATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _voter), 
                new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenId), 
                new org.web3j.abi.datatypes.Address(160, _applicant)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> getCommitteeMember(BigInteger _committeeTokenID, BigInteger _index) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETCOMMITTEEMEMBER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenID), 
                new org.web3j.abi.datatypes.generated.Uint256(_index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> getCommitteeMemberNum(BigInteger _committeeTokenID) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETCOMMITTEEMEMBERNUM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getCommitteeProportion(BigInteger _committeeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETCOMMITTEEPROPORTION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_committeeId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> getCommitteeToWorkTokenContract(BigInteger _committeeTokenID) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETCOMMITTEETOWORKTOKENCONTRACT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> getCommitteeToWorkTokenId(BigInteger _committeeTokenID, String _workContract) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETCOMMITTEETOWORKTOKENID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenID), 
                new org.web3j.abi.datatypes.Address(160, _workContract)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getFromWork(BigInteger _proposalTokenId, BigInteger _index) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETFROMWORK, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalTokenId), 
                new org.web3j.abi.datatypes.generated.Uint256(_index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> getFromWorkContract(BigInteger _proposalTokenId, BigInteger _index) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETFROMWORKCONTRACT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalTokenId), 
                new org.web3j.abi.datatypes.generated.Uint256(_index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> getFromWorkNum(BigInteger _proposalTokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETFROMWORKNUM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalTokenId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getProposalCommittee(BigInteger _proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPROPOSALCOMMITTEE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> getProposalDescribe(BigInteger _proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPROPOSALDESCRIBE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Boolean> getProposalFinalResult(String _proposer, BigInteger _proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPROPOSALFINALRESULT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _proposer), 
                new org.web3j.abi.datatypes.generated.Uint256(_proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> getProposalFinalResult2(String _proposer, BigInteger _proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPROPOSALFINALRESULT2, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _proposer), 
                new org.web3j.abi.datatypes.generated.Uint256(_proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> getProposalFinalResult3(String _proposer, BigInteger _proposalId, String _shares) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPROPOSALFINALRESULT3, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _proposer), 
                new org.web3j.abi.datatypes.generated.Uint256(_proposalId), 
                new org.web3j.abi.datatypes.Address(160, _shares)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> getProposalId() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GETPROPOSALID, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> getProposalProportion(BigInteger _proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPROPOSALPROPORTION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<String> getProposalProposer(BigInteger _proposalId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPROPOSALPROPOSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Boolean> getProposalResult(BigInteger _proposalId, String _commotteeMember) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPROPOSALRESULT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId), 
                new org.web3j.abi.datatypes.Address(160, _commotteeMember)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> getProposalVoteingState(BigInteger _proposalId, String _proposer) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPROPOSALVOTEINGSTATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId), 
                new org.web3j.abi.datatypes.Address(160, _proposer)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> getTokenAddress(BigInteger _ipTokenID) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETTOKENADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_ipTokenID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> getTokenId() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GETTOKENID, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> getVoteingResult2(BigInteger _proposalId, BigInteger _committeeId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETVOTEINGRESULT2, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId), 
                new org.web3j.abi.datatypes.generated.Uint256(_committeeId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> getVoteingResult3(BigInteger _proposalId, BigInteger _committeeId, String _shares, String _workContract, BigInteger _workId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETVOTEINGRESULT3, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId), 
                new org.web3j.abi.datatypes.generated.Uint256(_committeeId), 
                new org.web3j.abi.datatypes.Address(160, _shares), 
                new org.web3j.abi.datatypes.Address(160, _workContract), 
                new org.web3j.abi.datatypes.generated.Uint256(_workId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> judgeVoter(BigInteger _committeeTokenId, String _voter) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_JUDGEVOTER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenId), 
                new org.web3j.abi.datatypes.Address(160, _voter)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> proposal(String _proposer, String _depict) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_PROPOSAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _proposer), 
                new org.web3j.abi.datatypes.Utf8String(_depict)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> release(String _creator, String _workContract, BigInteger _workTokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RELEASE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _creator), 
                new org.web3j.abi.datatypes.Address(160, _workContract), 
                new org.web3j.abi.datatypes.generated.Uint256(_workTokenId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> searchCommitteeIdByWorkId(String _workContract, BigInteger _workTokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SEARCHCOMMITTEEIDBYWORKID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _workContract), 
                new org.web3j.abi.datatypes.generated.Uint256(_workTokenId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> setAdaptRightContract(String _addr) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETADAPTRIGHTCONTRACT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _addr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setApplyResult(String _voter, BigInteger _committeeTokenId, Boolean _result, String _applicant) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETAPPLYRESULT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _voter), 
                new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenId), 
                new org.web3j.abi.datatypes.Bool(_result), 
                new org.web3j.abi.datatypes.Address(160, _applicant)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setApplyVoteingState(String _voter, BigInteger _committeeTokenId, Boolean _state, String _applicant) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETAPPLYVOTEINGSTATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _voter), 
                new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenId), 
                new org.web3j.abi.datatypes.Bool(_state), 
                new org.web3j.abi.datatypes.Address(160, _applicant)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setCommitteeMember(BigInteger _committeeTokenID, String _member) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETCOMMITTEEMEMBER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenID), 
                new org.web3j.abi.datatypes.Address(160, _member)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setCommitteeProportion(BigInteger _committeeId, BigInteger _proportion) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETCOMMITTEEPROPORTION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_committeeId), 
                new org.web3j.abi.datatypes.generated.Uint256(_proportion)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setCommitteeToWorkTokenId(BigInteger _committeeTokenID, String _workContract, BigInteger _workTokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETCOMMITTEETOWORKTOKENID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenID), 
                new org.web3j.abi.datatypes.Address(160, _workContract), 
                new org.web3j.abi.datatypes.generated.Uint256(_workTokenId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setFromWork(BigInteger _proposalTokenId, BigInteger _fromWork) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETFROMWORK, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalTokenId), 
                new org.web3j.abi.datatypes.generated.Uint256(_fromWork)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setFromWorkContract(BigInteger _proposalTokenId, String _fromWorkContract) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETFROMWORKCONTRACT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalTokenId), 
                new org.web3j.abi.datatypes.Address(160, _fromWorkContract)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setFromWorkNum(BigInteger _proposalTokenId, BigInteger _fromWorkNum) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETFROMWORKNUM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalTokenId), 
                new org.web3j.abi.datatypes.generated.Uint256(_fromWorkNum)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setProposalCommittee(BigInteger _proposalId, BigInteger _committeeTokenId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPROPOSALCOMMITTEE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId), 
                new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setProposalDecribe(BigInteger _proposalId, String _depict) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPROPOSALDECRIBE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId), 
                new org.web3j.abi.datatypes.Utf8String(_depict)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setProposalProportion(BigInteger _proposalId, BigInteger _proportion) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPROPOSALPROPORTION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId), 
                new org.web3j.abi.datatypes.generated.Uint256(_proportion)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setProposalProposer(BigInteger _proposalId, String _proposer) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPROPOSALPROPOSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId), 
                new org.web3j.abi.datatypes.Address(160, _proposer)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setProposalResult(BigInteger _proposalId, String _commotteeMember, Boolean _result) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPROPOSALRESULT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId), 
                new org.web3j.abi.datatypes.Address(160, _commotteeMember), 
                new org.web3j.abi.datatypes.Bool(_result)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setProposalVoteingState(BigInteger _proposalId, String _proposer, Boolean _state) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPROPOSALVOTEINGSTATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_proposalId), 
                new org.web3j.abi.datatypes.Address(160, _proposer), 
                new org.web3j.abi.datatypes.Bool(_state)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setTokenAddress(BigInteger _ipTokenId, String _tokenAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETTOKENADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_ipTokenId), 
                new org.web3j.abi.datatypes.Address(160, _tokenAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> voteApply(BigInteger _committeeTokenId, Boolean _result, String _applicant) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_VOTEAPPLY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenId), 
                new org.web3j.abi.datatypes.Bool(_result), 
                new org.web3j.abi.datatypes.Address(160, _applicant)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> voteProposal(BigInteger _committeeTokenId, BigInteger _proposalId, Boolean _vote) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_VOTEPROPOSAL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(_committeeTokenId), 
                new org.web3j.abi.datatypes.generated.Uint256(_proposalId), 
                new org.web3j.abi.datatypes.Bool(_vote)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static Committee load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Committee(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Committee load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Committee(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Committee load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Committee(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Committee load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Committee(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Committee> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Committee.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Committee> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Committee.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<Committee> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Committee.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Committee> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Committee.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class AfterProposalEventResponse extends BaseEventResponse {
        public BigInteger _id;

        public String _contractAddress;
    }

    public static class AfterReleaseEventResponse extends BaseEventResponse {
        public BigInteger _id;

        public String _committeeContractAddress;

        public String _workContractAddress;

        public BigInteger _workId;
    }

    public static class ApplyVoteProgressEventResponse extends BaseEventResponse {
        public BigInteger _committeeTokenId;

        public String _applicant;

        public BigInteger _totalmember;

        public BigInteger _finished;
    }

    public static class ApplyVoteinfoEventResponse extends BaseEventResponse {
        public BigInteger _committeeTokenId;

        public String _voter;

        public String _applicant;
    }

    public static class ProposalVoteProgressEventResponse extends BaseEventResponse {
        public BigInteger _proposalId;

        public String _proposer;

        public BigInteger _totalmember;

        public BigInteger _finished;
    }

    public static class ProposalVoteinfoEventResponse extends BaseEventResponse {
        public BigInteger _committeeTokenId;

        public String _voter;

        public String _proposser;

        public String _workContract;

        public BigInteger _workTokenId;

        public String _depict;
    }
}
